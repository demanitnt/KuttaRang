[{"K:\\RangLearn\\ranglearn\\src\\pages\\playarea.js":"1","K:\\RangLearn\\ranglearn\\src\\pages\\home.js":"2","K:\\RangLearn\\ranglearn\\src\\index.js":"3","K:\\RangLearn\\ranglearn\\src\\pages\\signup.js":"4","K:\\RangLearn\\ranglearn\\src\\pages\\lobby.js":"5","K:\\RangLearn\\ranglearn\\src\\App.js":"6","K:\\RangLearn\\ranglearn\\src\\pages\\login.js":"7","K:\\RangLearn\\ranglearn\\src\\reportWebVitals.js":"8","K:\\RangLearn\\ranglearn\\src\\helpers\\auth.js":"9","K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\App.js":"10","K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\helpers\\auth.js":"11","K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\pages\\playarea.js":"12","K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\pages\\home.js":"13","K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\pages\\login.js":"14","K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\index.js":"15","K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\pages\\lobby.js":"16","K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\pages\\signup.js":"17","K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\reportWebVitals.js":"18","K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\services\\firebase.js":"19"},{"size":9137,"mtime":1610468911402,"results":"20","hashOfConfig":"21"},{"size":1094,"mtime":1610024844769,"results":"22","hashOfConfig":"21"},{"size":500,"mtime":1609160355925,"results":"23","hashOfConfig":"21"},{"size":1623,"mtime":1610094348270,"results":"24","hashOfConfig":"21"},{"size":1239,"mtime":1610382484697,"results":"25","hashOfConfig":"21"},{"size":1845,"mtime":1610462025333,"results":"26","hashOfConfig":"21"},{"size":2487,"mtime":1610020436409,"results":"27","hashOfConfig":"21"},{"size":362,"mtime":1609160355925,"results":"28","hashOfConfig":"21"},{"size":493,"mtime":1610019740627,"results":"29","hashOfConfig":"21"},{"size":1845,"mtime":1610462025333,"results":"30","hashOfConfig":"31"},{"size":493,"mtime":1610019740627,"results":"32","hashOfConfig":"31"},{"size":14339,"mtime":1612280045643,"results":"33","hashOfConfig":"31"},{"size":1094,"mtime":1610024844769,"results":"34","hashOfConfig":"31"},{"size":2487,"mtime":1610020436409,"results":"35","hashOfConfig":"31"},{"size":500,"mtime":1609160355925,"results":"36","hashOfConfig":"31"},{"size":1239,"mtime":1610382484697,"results":"37","hashOfConfig":"31"},{"size":1623,"mtime":1610094348270,"results":"38","hashOfConfig":"31"},{"size":362,"mtime":1609160355925,"results":"39","hashOfConfig":"31"},{"size":361,"mtime":1610001256312,"results":"40","hashOfConfig":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"jfgpnc",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1633sld",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"K:\\RangLearn\\ranglearn\\src\\pages\\playarea.js",["90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"import React, { Component } from 'react';\r\n//import { GlobalCounterProvider } from '../helpers/globalvar'\r\n//import Counter from '../helpers/Counter';\r\nimport {auth} from '../services/firebase';\r\nimport '../Styles.css';\r\nimport { Switch } from 'react-router-dom';\r\nimport { findAllByDisplayValue } from '@testing-library/react';\r\nimport { render } from \"@testing-library/react\";\r\n\r\nimport '../App.css';\r\nimport socketIOClient from \"socket.io-client\";\r\nconst ENDPOINT = \"http://127.0.0.1:4001\";\r\nvar connectionOptions = {\r\n    \"force new connection\": true,\r\n    \"reconnectionAttempts\": \"Infinity\", //avoid having user reconnect manually in order to prevent dead clients after a server restart\r\n    \"timeout\": 10000, //before connect_error and connect_timeout are emitted.\r\n    \"transports\": [\"websocket\"]\r\n    };\r\n    const socket = socketIOClient(ENDPOINT, connectionOptions);\r\n\r\n\r\nclass Playarea extends Component \r\n\r\n{\r\n    \r\n\r\n  constructor(props)\r\n                {\r\n                  super(props);\r\n                this.state ={\r\n                  Player1: [{}],\r\n                  Player2: [{}],\r\n                  Player3: [{}],\r\n                  Player4: [{}],\r\n                  active: null,\r\n                  showPlayarea: false,\r\n                  code: null,\r\n                  user: auth().currentUser,\r\n                  roomid: null,\r\n                  currentID: null,\r\n                  message: null,\r\n                  \r\n                  Cards: [51].fill({null:null})\r\n                \r\n};\r\n    this.MakeCard= this.MakeCard.bind(this);\r\n    this.createRoom= this.createRoom.bind(this);\r\n    this.handlecall=this.handlecall.bind(this)\r\n    this.submitdata=this.submitdata.bind(this);\r\n\r\n};\r\n\r\nhandlecall(event)\r\n{\r\n    this.setState({roomid : event.target.value});\r\n\r\n}\r\n\r\nsubmitdata()\r\n{\r\n   socket.emit(\"NewPlayer2\", {roomid:this.state.roomid, useremail: this.state.user.email, id: null});\r\n   socket.on(\"Youjoined\", (data, showroom)=>{\r\n\r\n    this.setState({showPlayarea:showroom, currentID:data.id  });\r\n   })\r\n\r\n   socket.on(\"Roomfull\", data=>{\r\n       this.setState({message:data})\r\n   })\r\n\r\n}\r\n\r\n\r\n async createRoom()\r\n {\r\n     var RandomV = Math.floor(Math.random()  * 100000)+1;\r\n     \r\n     await this.setState({code: RandomV})\r\n\r\n     socket.emit(\"Hello_Ass_hole_connection\", {code: this.state.code, id: 1, useremail: this.state.user.email })\r\n     socket.on(\"RoomCreated\", data => {\r\n         this.setState({showPlayarea:data});\r\n     })          \r\n    \r\n } \r\n  async  MakeCard()\r\n   {\r\n    let c=[];\r\n       \r\n       for ( let i=0; i<13; i++)\r\n       c[i]={name:\" suit Spade\", value: i+2};\r\n\r\n       for ( let i=13; i<26; i++)\r\n       c[i]={name:\"suit diamonds\", value: i-11};\r\n\r\n       for ( let i=26; i<39; i++)\r\n       c[i]={name:\"suit clubs\", value: i-24};\r\n\r\n       for ( let i=39; i<52; i++)\r\n       c[i]={name:\"suit hearts\", value: i-37};\r\n\r\n   \r\n   const Shuffled = c.sort(() => 0.5 - Math.random());\r\n\r\n   \r\n      await this.setState({\r\n        Player1: Shuffled.slice(0,13) ,\r\n        Player2: Shuffled.slice(13,26) ,\r\n        Player3: Shuffled.slice(26,39) ,\r\n        Player4: Shuffled.slice(39,52) \r\n\r\n\r\n       })\r\n   \r\n       console.log(Shuffled);\r\n   \r\n       console.log(this.state.Player1);\r\n       console.log(this.state.Player2);\r\n   \r\n   } \r\n   \r\n              \r\n  render()\r\n  {\r\n    let card1=   this.state.Player1.map((card) =><div className=\"deck\"><div class=\"card\" >\r\n    <div class=\"value\" >{card.value}\r\n    </div>\r\n    <div className={card.name}>\r\n    </div>\r\n    </div></div>) ;\r\n    let card2=     this.state.Player2.map((card) =><div className=\"deck\"><div class=\"card\" >\r\n    <div class=\"value\" >{card.value}\r\n    </div>\r\n    <div className={card.name}>\r\n    </div>\r\n    </div></div>);\r\n    let card3=     this.state.Player3.map((card) =><div className=\"deck\"><div class=\"card\" >\r\n    <div class=\"value\" >{card.value}\r\n    </div>\r\n    <div className={card.name}>\r\n    </div>\r\n    </div></div>);\r\n    let card4=     this.state.Player4.map((card) =><div className=\"deck\"><div class=\"card\" >\r\n    <div class=\"value\" >{card.value}\r\n    </div>\r\n    <div className={card.name}>\r\n    </div>\r\n    </div></div>);\r\n    //  let cardA= card1.forEach(<div className=\"deck\"><p class=\"card\">    </p> </div>);\r\n\r\n\r\n\r\n\r\n   return(\r\n\r\n\r\n\r\n\r\n<>\r\n    <div>\r\n        {/* THIS CODE WILL EITHER HIDE THE PLAYAREA OR SHOW THE PLAYAREA */}\r\n       <div style={{display: this.state.showPlayarea? 'none':'block' }}><div className=\"home\">\r\n    <h4 className=\"playarea-header\">Welcome to Rang Game Lobby</h4>\r\n    <h4>{this.state.code}</h4>\r\n    <button onClick ={this.createRoom}> Create New Room</button>\r\n   <p> <button onClick ={this.submitdata}> Enter Room ID</button></p>\r\n   <span>{this.state.message}</span>\r\n    <input type=\"number\" placeholder=\"Enter Room ID\" onChange={this.handlecall}/>\r\n \r\n   \r\n   </div></div>        \r\n                <div style={{display: !this.state.showPlayarea? 'none':'block' }}>\r\n                    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <p style={{background:\"tomato\"}}><h2>Rang card game</h2></p>\r\n       <div style={{marginTop:\"50px\", display:\"inline\"}}> <a class=\"nav-item nav-link\" href=\"#\" onClick={this.MakeCard}>Distribute</a>       \r\n        <a class=\"nav-item nav-link\" href=\"#\">declare winner</a>\r\n        <a class=\"nav-item nav-link\" href=\"#\">Endgame</a>\r\n        <a class=\"nav-item nav-link\" href=\"#\">Choose 1 player</a>\r\n                        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    \r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                    </button></div>\r\n\r\n                        <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\">\r\n       \r\n    </div>\r\n</div>\r\n                    </nav>\r\n                        <div>\r\n                        </div>\r\n\r\n                    <div className='count'>\r\n                        <button type=\"button\" class=\" mb-3 btn btn-success\">\r\n                            Players online: <span class=\"badge badge-light\"> </span>  \r\n                        </button>\r\n                    </div>\r\n\r\n                                        <br />\r\n\r\n                    <div class=\"row\">\r\n                    <div class=\"card text-white bg-primary mb-3\" style={{ 'max-width': '18rem', 'float': 'left' }}>\r\n                            <div class=\"card-header\">Player 1</div>\r\n                                <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\"></h5>\r\n                                        <p class=\"card-text\">\r\n                                        </p>\r\n                                </div>\r\n                    </div>\r\n\r\n                    <div class=\"deck\">\r\n\r\n                    <div class=\"card\" >\r\n                <div class=\"value\">{this.state.active != null ?this.state.active.title:''}\r\n                </div>\r\n                <div className={this.state.active != null ?this.state.active.class:''}>\r\n                    </div> \r\n                \r\n                </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-4 mb-3\"></div>\r\n                    \r\n                    <div class=\"col-4 mb-3\"></div>\r\n                \r\n                    <div class=\"card text-white bg-primary mb-3\" style={{ 'max-width': '18rem', 'float': 'right' }}>\r\n                    <div class=\"card-header\">Player 2</div>\r\n                    <div class=\"card-body\">\r\n\r\n                        <h5 class=\"card-title\"></h5>\r\n                        <p class=\"card-text\">cards coming...</p>\r\n                    </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            <div class=\"row\">\r\n                \r\n                <div class=\"card text-white bg-primary mb-3\" style={{ 'max-width': '18rem', 'float': 'left' }}>\r\n                        <div class=\"card-header\">Player 3</div>\r\n                            \r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\"></h5>\r\n                                <p class=\"card-text\">cards coming...</p>\r\n                            </div>\r\n                </div>\r\n\r\n                        <div class=\"col-4 mb-3\"></div>\r\n                        <div class=\"col-4 mb-3\"></div>\r\n                <div class=\"card text-white bg-primary mb-3\" style={{ 'max-width': '18rem', 'float': 'right' }}>\r\n                        <div class=\"card-header\">Player 4</div>\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\"></h5>\r\n                            <p class=\"card-text\">cards coming...</p>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n\r\n                     \r\n                        \r\n           \r\n   \r\n\r\n                                               \r\n</div >\r\n<div>\r\n <p >{card1} </p>\r\n </div>\r\n </div>\r\n </>\r\n           \r\n        );\r\n    }\r\n\r\n}\r\nexport default Playarea;\r\n\r\n\r\n\r\n\r\n","K:\\RangLearn\\ranglearn\\src\\pages\\home.js",[],"K:\\RangLearn\\ranglearn\\src\\index.js",[],["104","105"],"K:\\RangLearn\\ranglearn\\src\\pages\\signup.js",[],"K:\\RangLearn\\ranglearn\\src\\pages\\lobby.js",["106","107","108","109"],"import { render } from \"@testing-library/react\";\r\nimport React, { Component, useState } from \"react\";\r\nimport '../App.css';\r\nimport socketIOClient from \"socket.io-client\";\r\nconst ENDPOINT = \"http://127.0.0.1:4001\";\r\n\r\n\r\n\r\n\r\nexport default class Lobby extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n     super(props);\r\n     this.state= { code: null, \r\n        joincode: null\r\n     };\r\n     this.createRoom= this.createRoom.bind(this);\r\n     this.handlecall= this.handlecall.bind(this);\r\n     this.submitdata= this.submitdata.bind(this);\r\n    \r\n    }\r\n    \r\n     async createRoom(){\r\n        var randomV = Math.floor((Math.random() * 3000) + 1); \r\n        this.setState({code: randomV})\r\n     }\r\n\r\n     handlecall(event)\r\n     {\r\n         this.setState({joincode: event.target.value})\r\n     }\r\n\r\n    \r\n\r\nrender() {\r\n        \r\n    return (\r\n    <div className=\"home\">\r\n    <h4 className=\"playarea-header\">Welcome to Rang Game Lobby</h4>\r\n    <h4>{this.state.code}</h4>\r\n    <button onClick ={this.createRoom}> Create New Room</button>\r\n   <p> <button onClick ={this.submitdata}> Enter Room ID</button></p>\r\n    <input type=\"number\" placeholder=\"Enter Room ID\" onChange={this.handlecall}/>\r\n \r\n   \r\n   </div>\r\n    );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","K:\\RangLearn\\ranglearn\\src\\App.js",["110"],"K:\\RangLearn\\ranglearn\\src\\pages\\login.js",["111"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signin, signInWithGoogle} from \"../helpers/auth\";\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        email: \"\",\r\n        password: \"\"\r\n      };\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value\r\n        });\r\n      }\r\n\r\n      async handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ error: \"\" });\r\n        try {\r\n          await signin(this.state.email, this.state.password);\r\n        } catch (error) {\r\n          this.setState({ error: error.message });\r\n        }\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <div>\r\n            <form\r\n              autoComplete=\"off\"\r\n              onSubmit={this.handleSubmit}\r\n            >\r\n              <h1>\r\n                Login to\r\n                <Link to=\"/\">\r\n                  Rang Game\r\n                </Link>\r\n              </h1>\r\n              <p>\r\n                Fill in the form below to login to your account.\r\n              </p>\r\n              <div>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.email}\r\n                />\r\n              </div>\r\n              <div>\r\n                <input\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.password}\r\n                  type=\"password\"\r\n                />\r\n              </div>\r\n              <div>\r\n                {this.state.error ? (\r\n                  <p>{this.state.error}</p>\r\n                ) : null}\r\n                <button type=\"submit\">Login</button>\r\n              </div>\r\n              <hr />\r\n\r\n              <p>You can also log in with any of these services</p>\r\n<button className=\"btn btn-danger mr-2\" type=\"button\" onClick={this.googleSignIn}>\r\nSign in with Google\r\n</button>\r\n\r\n<hr />\r\n<p></p>\r\n              <p>\r\n                Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        );\r\n      }\r\n    }",["112","113"],"K:\\RangLearn\\ranglearn\\src\\reportWebVitals.js",[],"K:\\RangLearn\\ranglearn\\src\\helpers\\auth.js",[],"K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\App.js",["114"],"K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\helpers\\auth.js",[],"K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\pages\\playarea.js",["115","116","117","118","119","120","121","122","123","124","125"],"import React, { Component } from \"react\";\r\n//import { GlobalCounterProvider } from '../helpers/globalvar'\r\n//import Counter from '../helpers/Counter';\r\nimport { auth } from \"../services/firebase\";\r\nimport \"../Styles.css\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { findAllByDisplayValue } from \"@testing-library/react\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nimport \"../App.css\";\r\nimport socketIOClient from \"socket.io-client\";\r\nconst ENDPOINT = \"http://127.0.0.1:4001\";\r\nvar connectionOptions = {\r\n  \"force new connection\": true,\r\n  reconnectionAttempts: \"Infinity\", //avoid having user reconnect manually in order to prevent dead clients after a server restart\r\n  timeout: 10000, //before connect_error and connect_timeout are emitted.\r\n  transports: [\"websocket\"],\r\n};\r\nconst socket = socketIOClient(ENDPOINT, connectionOptions);\r\n\r\nclass Playarea extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Player1: null,\r\n      Player2: null,\r\n      Player3: null,\r\n      Player4: null,\r\n      active: null,\r\n      Activecomingbac: [],\r\n      showPlayarea: false,\r\n      code: null,\r\n      user: auth().currentUser,\r\n      roomid: null,\r\n      currentID: null,\r\n      message: null,\r\n      \r\n      receivedCards: [],\r\n\r\n      Cards: [51].fill({ null: null }),\r\n    };\r\n    // this.MakeCard= this.MakeCard.bind(this);\r\n    this.createRoom = this.createRoom.bind(this);\r\n    this.handlecall = this.handlecall.bind(this);\r\n    this.submitdata = this.submitdata.bind(this);\r\n    // this.callCard= this.callCard.bind(this);\r\n  }\r\n\r\n  \r\n\r\n  handlecall(event) {\r\n    this.setState({ roomid: event.target.value }); \r\n  }\r\n\r\n   async activecard(c)\r\n  {        socket.emit(\"ActiveCardGoing\", c);\r\n    await socket.on(\"Activecardback\", c=>{  this.setState({Activecomingbac: c})});\r\n      \r\n       \r\n       \r\n     \r\n  }\r\n\r\n\r\n  submitdata() {\r\n    socket.emit(\"JoinRoom\", {\r\n      roomid: parseInt(this.state.roomid),\r\n      useremail: this.state.user.email,\r\n      id: null\r\n    });\r\n    // socket.on(\"Activecardback\", c=>{\r\n    //   console.log(\"This is active card comming bacd from server\",c)\r\n    //    this.setState({Activecomingbac: c})});\r\n    \r\n    socket.on(\"Youjoined\", (users, showroom) => {\r\n      console.log(users.length);\r\n      this.setState({\r\n        showPlayarea: showroom,\r\n        currentID: users.length,\r\n        Player1: users[0],\r\n        Player2: users[1], \r\n        Player3: users[2],\r\n        Player4: users[3],\r\n      });\r\n      // socket.on(\"Activecardback\", d=>{\r\n      //   console.log(\"This is active card comming bacd from server\",d)\r\n      //    this.setState({Activecomingbac: d})});\r\n      //    console.log(\"Tghis is from server on click\",this.state.Activecomingbac)\r\n    });\r\n\r\n    socket.on(\"Roomfull\", (data) => {\r\n      this.setState({ message: data });\r\n    });\r\n\r\n    socket.on(\"NewPlayerJoined\", (users) => {\r\n      console.log(\"This is users\",users);\r\n      this.setState({\r\n        Player1: users[0],\r\n        Player2: users[1],\r\n        Player3: users[2],\r\n        Player4: users[3],\r\n      });\r\n      // socket.on(\"Activecardback\", d=>{\r\n      //   console.log(\"This is active card comming bacd from server\",d)\r\n      //    this.setState({Activecomingbac: d})});\r\n      //    console.log(\"Tghis is from server on click\",this.state.Activecomingbac)\r\n    });\r\n\r\n    socket.on(\"Cardcoming\", (receivedCards) => {\r\n      console.log(receivedCards);\r\n      this.setState({receivedCards: receivedCards})\r\n\r\n    });\r\n    // socket.on(\"Activecardback\", d=>{\r\n    //   console.log(\"This is active card comming bacd from server\",d)\r\n    //   this.setState({Activecomingbac: d})});\r\n  }\r\n\r\n  async createRoom() {\r\n    var RandomV = Math.floor(Math.random() * 100000) + 1;\r\n\r\n    await this.setState({ code: RandomV });\r\n\r\n\r\n    socket.emit(\"RequestCreateRoom\", {\r\n      code: this.state.code,\r\n      id: 1,\r\n      useremail: this.state.user.email,\r\n    });\r\n    socket.on(\"RoomCreated\", (showData, users) => {\r\n      this.setState({\r\n        showPlayarea: showData,\r\n        Player1: users[0],\r\n        Player2: users[1],\r\n        Player3: users[2],\r\n        Player4: users[3],\r\n      });\r\n      socket.on(\"Cardcoming\", (receivedCards) => {\r\n          this.setState({receivedCards: receivedCards})\r\n        console.log(receivedCards);\r\n      });\r\n      // socket.on(\"Activecardback\", d=>{\r\n      //   console.log(\"This is active card comming bacd from server\",d)\r\n      //    this.setState({Activecomingbac: d})});\r\n      //    console.log(\"Tghis is from server on click\",this.state.Activecomingbac)\r\n\r\n      // socket.on(\"Activecardback\", c=>{\r\n      //   console.log(\"This is active card comming bacd from server\",c) \r\n      //   this.setState({Activecomingbac: c})});\r\n\r\n      socket.on(\"NewPlayerJoined\", (users) => {\r\n        console.log(users);\r\n        this.setState({\r\n          Player1: users[0],\r\n          Player2: users[1],\r\n          Player3: users[2],\r\n          Player4: users[3],\r\n        });\r\n      });\r\n    });\r\n  }\r\n  //   async  MakeCard()\r\n  //    {\r\n  //     let c=[];\r\n\r\n  //        for ( let i=0; i<13; i++)\r\n  //        c[i]={name:\" suit Spade\", value: i+2};\r\n\r\n  //        for ( let i=13; i<26; i++)\r\n  //        c[i]={name:\"suit diamonds\", value: i-11};\r\n\r\n  //        for ( let i=26; i<39; i++)\r\n  //        c[i]={name:\"suit clubs\", value: i-24};\r\n\r\n  //        for ( let i=39; i<52; i++)\r\n  //        c[i]={name:\"suit hearts\", value: i-37};\r\n\r\n  //    const Shuffled = c.sort(() => 0.5 - Math.random());\r\n\r\n  //       await this.setState({\r\n  //         Player1: Shuffled.slice(0,13) ,\r\n  //         Player2: Shuffled.slice(13,26) ,\r\n  //         Player3: Shuffled.slice(26,39) ,\r\n  //         Player4: Shuffled.slice(39,52)\r\n\r\n  //        })\r\n\r\n  //        console.log(Shuffled);\r\n\r\n  //        console.log(this.state.Player1);\r\n  //        console.log(this.state.Player2);\r\n\r\n  //    }\r\n\r\n  render() {\r\n    var player1Name = this.state.Player1 ? this.state.Player1.useremail : \"\";\r\n    var player2Name = this.state.Player2 ? this.state.Player2.useremail : \"\";\r\n    var player3Name = this.state.Player3 ? this.state.Player3.useremail : \"\";\r\n    var player4Name = this.state.Player4 ? this.state.Player4.useremail : \"\";\r\n     \r\n\r\n    // console.log(\"Playeractive\", player1Active+player2Active+player3Active+player4Active)\r\n   \r\n    const cardsItems = this.state.receivedCards.map((c) =>\r\n            <div className=\"deck\" onClick={()=>this.activecard(c)}> \r\n            <div class=\"card\" >\r\n                <div class=\"value\">{c.value}\r\n                </div>\r\n                <div className={c.name}> \r\n                </div> \r\n            </div></div>\r\n        );\r\n\r\n    // let card1=   this.state.Player1.map((card) =><div className=\"deck\"><div class=\"card\" >\r\n    // <div class=\"value\" >{card.value}\r\n    // </div>\r\n    // <div className={card.name}>\r\n    // </div>\r\n    // </div></div>) ;\r\n    // let card2=     this.state.Player2.map((card) =><div className=\"deck\"><div class=\"card\" >\r\n    // <div class=\"value\" >{card.value}\r\n    // </div>\r\n    // <div className={card.name}>\r\n    // </div>\r\n    // </div></div>);\r\n    // let card3=     this.state.Player3.map((card) =><div className=\"deck\"><div class=\"card\" >\r\n    // <div class=\"value\" >{card.value}\r\n    // </div>\r\n    // <div className={card.name}>\r\n    // </div>\r\n    // </div></div>);\r\n    // let card4=     this.state.Player4.map((card) =><div className=\"deck\"><div class=\"card\" >\r\n    // <div class=\"value\" >{card.value}\r\n    // </div>\r\n    // <div className={card.name}>\r\n    // </div>\r\n    // </div></div>);\r\n    //  let cardA= card1.forEach(<div className=\"deck\"><p class=\"card\">    </p> </div>);\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          {/* THIS CODE WILL EITHER HIDE THE PLAYAREA OR SHOW THE PLAYAREA */}\r\n          <div style={{ display: this.state.showPlayarea ? \"none\" : \"block\" }}>\r\n            <div className=\"home\">\r\n              <h4 className=\"playarea-header\">Welcome to Rang Game Lobby</h4>\r\n              <h4>{this.state.code}</h4>\r\n              <button onClick={this.createRoom}> Create New Room{this.state.code}</button>\r\n              <p>\r\n                {\" \"}\r\n                <button onClick={this.submitdata}> Enter Room ID</button>\r\n              </p>\r\n              <span>{this.state.message}</span>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Enter Room ID\"\r\n                onChange={this.handlecall}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ display: !this.state.showPlayarea ? \"none\" : \"block\" }}>\r\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n              <p style={{ background: \"tomato\" }}>\r\n                <h2>Rang card game</h2>\r\n              </p>\r\n              <div style={{ marginTop: \"50px\", display: \"inline\" }}>\r\n                {\" \"}\r\n                <a class=\"nav-item nav-link\" href=\"#\">\r\n                  Distribute\r\n                </a>\r\n                <a class=\"nav-item nav-link\" href=\"#\">\r\n                  declare winner\r\n                </a>\r\n                <a class=\"nav-item nav-link\" href=\"#\">\r\n                  Endgame\r\n                </a>\r\n                <a class=\"nav-item nav-link\" href=\"#\">\r\n                  Choose 1 player\r\n                </a>\r\n                <button\r\n                  class=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#navbarNavAltMarkup\"\r\n                  aria-controls=\"navbarNavAltMarkup\"\r\n                  aria-expanded=\"false\"\r\n                  aria-label=\"Toggle navigation\"\r\n                >\r\n                  <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                <div class=\"navbar-nav\"></div>\r\n              </div>\r\n            </nav>\r\n            <div></div>\r\n\r\n            <div className=\"count\">\r\n              <button type=\"button\" class=\" mb-3 btn btn-success\">\r\n                Players online: <span class=\"badge badge-light\"> </span>\r\n              </button>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div class=\"row\">\r\n              <div\r\n                class=\"card text-white bg-primary mb-3\"\r\n                style={{ \"max-width\": \"18rem\", float: \"left\" }}\r\n              >\r\n                <div class=\"card-header\">{player1Name}</div>\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\"></h5>\r\n                  <p class=\"card-text\"></p>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"deck\">\r\n                <div class=\"card\">\r\n                  <div class=\"value\">\r\n                    {this.state.Activecomingbac != null  ? this.state.Activecomingbac.value : \"\"}\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      this.state.Activecomingbac != null  ? this.state.Activecomingbac.name : \"\"\r\n                    }\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-4 mb-3\"></div>\r\n\r\n              <div class=\"col-4 mb-3\"></div>\r\n\r\n              <div\r\n                class=\"card text-white bg-primary mb-3\"\r\n                style={{ \"max-width\": \"18rem\", float: \"right\" }}\r\n              >\r\n                <div class=\"card-header\">{player2Name}</div>\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\"></h5>\r\n                  <p class=\"card-text\">cards coming...</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"deck\">\r\n                <div class=\"card\">\r\n                  <div class=\"value\">\r\n                    {this.state.Activecomingbac != null  ? this.state.Activecomingbac.value : \"\"}\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      this.state.Activecomingbac != null  ? this.state.Activecomingbac.name : \"\"\r\n                    }\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n                    \r\n\r\n            <div class=\"row\">\r\n              <div\r\n                class=\"card text-white bg-primary mb-3\"\r\n                style={{ \"max-width\": \"18rem\", float: \"left\" }}\r\n              >\r\n                <div class=\"card-header\">{player3Name}</div>\r\n\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\"></h5>\r\n                  <p class=\"card-text\">cards coming...</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"deck\">\r\n                <div class=\"card\">\r\n                  <div class=\"value\">\r\n                    {this.state.Activecomingbac != null  ? this.state.Activecomingbac.value : \"\"}\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      this.state.Activecomingbac != null  ? this.state.Activecomingbac.name : \"\"\r\n                    }\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-4 mb-3\"></div>\r\n              <div class=\"col-4 mb-3\"></div>\r\n              <div\r\n                class=\"card text-white bg-primary mb-3\"\r\n                style={{ \"max-width\": \"18rem\", float: \"right\" }}\r\n              >\r\n                <div class=\"card-header\">{player4Name}</div>\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\"></h5>\r\n                  <p class=\"card-text\">cards coming...</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"deck\">\r\n                <div class=\"card\">\r\n                  <div class=\"value\">\r\n                    {this.state.Activecomingbac != null  ? this.state.Activecomingbac.value : \"\"}\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      this.state.Activecomingbac != null  ? this.state.Activecomingbac.name : \"\"\r\n                    }\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div >\r\n               \r\n                  {cardsItems} \r\n                 \r\n              </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Playarea;\r\n","K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\pages\\home.js",[],["126","127"],"K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\pages\\login.js",["128"],"K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\index.js",[],["129","130"],"K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\pages\\lobby.js",["131","132","133","134"],["135","136"],"K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\pages\\signup.js",[],"K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\reportWebVitals.js",[],["137","138"],"K:\\server connected and player1 card shown\\RangLearn\\ranglearn\\src\\services\\firebase.js",[],["139","140"],{"ruleId":"141","severity":1,"message":"142","line":6,"column":10,"nodeType":"143","messageId":"144","endLine":6,"endColumn":16},{"ruleId":"141","severity":1,"message":"145","line":7,"column":10,"nodeType":"143","messageId":"144","endLine":7,"endColumn":31},{"ruleId":"141","severity":1,"message":"146","line":8,"column":10,"nodeType":"143","messageId":"144","endLine":8,"endColumn":16},{"ruleId":"141","severity":1,"message":"147","line":131,"column":9,"nodeType":"143","messageId":"144","endLine":131,"endColumn":14},{"ruleId":"141","severity":1,"message":"148","line":137,"column":9,"nodeType":"143","messageId":"144","endLine":137,"endColumn":14},{"ruleId":"141","severity":1,"message":"149","line":143,"column":9,"nodeType":"143","messageId":"144","endLine":143,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":175,"column":59,"nodeType":"152","endLine":175,"endColumn":121},{"ruleId":"150","severity":1,"message":"151","line":176,"column":9,"nodeType":"152","endLine":176,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":177,"column":9,"nodeType":"152","endLine":177,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":178,"column":9,"nodeType":"152","endLine":178,"endColumn":47},{"ruleId":"153","severity":1,"message":"154","line":205,"column":41,"nodeType":"152","endLine":205,"endColumn":64},{"ruleId":"153","severity":1,"message":"154","line":230,"column":25,"nodeType":"152","endLine":230,"endColumn":48},{"ruleId":"153","severity":1,"message":"154","line":243,"column":33,"nodeType":"152","endLine":243,"endColumn":56},{"ruleId":"153","severity":1,"message":"154","line":253,"column":29,"nodeType":"152","endLine":253,"endColumn":52},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"141","severity":1,"message":"146","line":1,"column":10,"nodeType":"143","messageId":"144","endLine":1,"endColumn":16},{"ruleId":"141","severity":1,"message":"159","line":2,"column":28,"nodeType":"143","messageId":"144","endLine":2,"endColumn":36},{"ruleId":"141","severity":1,"message":"160","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":22},{"ruleId":"141","severity":1,"message":"161","line":5,"column":7,"nodeType":"143","messageId":"144","endLine":5,"endColumn":15},{"ruleId":"141","severity":1,"message":"162","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":12},{"ruleId":"141","severity":1,"message":"163","line":3,"column":18,"nodeType":"143","messageId":"144","endLine":3,"endColumn":34},{"ruleId":"155","replacedBy":"164"},{"ruleId":"157","replacedBy":"165"},{"ruleId":"141","severity":1,"message":"162","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":12},{"ruleId":"141","severity":1,"message":"142","line":6,"column":10,"nodeType":"143","messageId":"144","endLine":6,"endColumn":16},{"ruleId":"141","severity":1,"message":"145","line":7,"column":10,"nodeType":"143","messageId":"144","endLine":7,"endColumn":31},{"ruleId":"141","severity":1,"message":"146","line":8,"column":10,"nodeType":"143","messageId":"144","endLine":8,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":268,"column":17,"nodeType":"152","endLine":268,"endColumn":55},{"ruleId":"150","severity":1,"message":"151","line":271,"column":17,"nodeType":"152","endLine":271,"endColumn":55},{"ruleId":"150","severity":1,"message":"151","line":274,"column":17,"nodeType":"152","endLine":274,"endColumn":55},{"ruleId":"150","severity":1,"message":"151","line":277,"column":17,"nodeType":"152","endLine":277,"endColumn":55},{"ruleId":"153","severity":1,"message":"154","line":314,"column":19,"nodeType":"152","endLine":314,"endColumn":42},{"ruleId":"153","severity":1,"message":"154","line":342,"column":19,"nodeType":"152","endLine":342,"endColumn":42},{"ruleId":"153","severity":1,"message":"154","line":369,"column":19,"nodeType":"152","endLine":369,"endColumn":42},{"ruleId":"153","severity":1,"message":"154","line":395,"column":19,"nodeType":"152","endLine":395,"endColumn":42},{"ruleId":"155","replacedBy":"166"},{"ruleId":"157","replacedBy":"167"},{"ruleId":"141","severity":1,"message":"163","line":3,"column":18,"nodeType":"143","messageId":"144","endLine":3,"endColumn":34},{"ruleId":"155","replacedBy":"168"},{"ruleId":"157","replacedBy":"169"},{"ruleId":"141","severity":1,"message":"146","line":1,"column":10,"nodeType":"143","messageId":"144","endLine":1,"endColumn":16},{"ruleId":"141","severity":1,"message":"159","line":2,"column":28,"nodeType":"143","messageId":"144","endLine":2,"endColumn":36},{"ruleId":"141","severity":1,"message":"160","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":22},{"ruleId":"141","severity":1,"message":"161","line":5,"column":7,"nodeType":"143","messageId":"144","endLine":5,"endColumn":15},{"ruleId":"155","replacedBy":"170"},{"ruleId":"157","replacedBy":"171"},{"ruleId":"155","replacedBy":"172"},{"ruleId":"157","replacedBy":"173"},{"ruleId":"155","replacedBy":"174"},{"ruleId":"157","replacedBy":"175"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'findAllByDisplayValue' is defined but never used.","'render' is defined but never used.","'card2' is assigned a value but never used.","'card3' is assigned a value but never used.","'card4' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-native-reassign",["176"],"no-negated-in-lhs",["177"],"'useState' is defined but never used.","'socketIOClient' is defined but never used.","'ENDPOINT' is assigned a value but never used.","'logo' is defined but never used.","'signInWithGoogle' is defined but never used.",["176"],["177"],["176"],["177"],["176"],["177"],["176"],["177"],["176"],["177"],["176"],["177"],"no-global-assign","no-unsafe-negation"]